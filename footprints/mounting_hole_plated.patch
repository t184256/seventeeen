diff --git a/mounting_hole_plated.js b/mounting_hole_plated.js
index 42158d5..d0a35e0 100644
--- a/mounting_hole_plated.js
+++ b/mounting_hole_plated.js
@@ -23,6 +23,8 @@
 //      The vertical height of an oval hole, in mm.
 //    include_courtyard: default is true
 //      if true it will include the part courtyard
+//    include_courtyard: default is undefined
+//      net to map it to
 //
 //  @ceoloide's improvements:
 //    - Upgrade to KiCad 8
@@ -36,6 +38,7 @@ module.exports = {
     drill: 2.2,
     drill_y: 0,
     include_courtyard: true,
+    net: undefined,
   },
   body: p => {
     if (p.drill_y == 0) {
@@ -62,14 +65,14 @@ module.exports = {
     `
 
     const pad_circle = `
-    (pad "" thru_hole circle (at 0 0 ${p.r}) (size ${size_x} ${size_y}) (drill ${p.drill}) (layers "*.Cu" "*.Mask"))
+    (pad "" thru_hole circle (at 0 0 ${p.r}) (size ${size_x} ${size_y}) (drill ${p.drill}) (layers "*.Cu" "*.Mask") ${p.net})
     `
     const courtyard_circle = `
     (fp_circle (center 0 0) (end -${courtyard_x} 0) (layer "F.CrtYd") (stroke (width 0.05) (type solid)) (fill none))
     (fp_circle (center 0 0) (end -${courtyard_x} 0) (layer "B.CrtYd") (stroke (width 0.05) (type solid)) (fill none))
     `
     const pad_oval = `
-    (pad "" thru_hole oval (at 0 0 ${p.r}) (size ${size_x} ${size_y}) (drill oval ${p.drill} ${p.drill_y}) (layers "*.Cu" "*.Mask"))
+    (pad "" thru_hole oval (at 0 0 ${p.r}) (size ${size_x} ${size_y}) (drill oval ${p.drill} ${p.drill_y}) (layers "*.Cu" "*.Mask") ${p.net})
     `
     const courtyard_oval = `
     (fp_line (start ${courtyard_x} -${courtyard_y}) (end ${courtyard_x} ${courtyard_y}) (layer "F.CrtYd") (stroke (width 0.05) (type solid)))
@@ -99,4 +102,4 @@ module.exports = {
 
     return final
   }
-}
\ No newline at end of file
+}
